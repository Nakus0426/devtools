{{{commentText}}}
import { Alova, AlovaMethodCreateConfig, Method } from 'alova';
import type { $$userConfigMap, alovaInstance } from '.';
import type apiDefinitions from './apiDefinitions';

type CollapsedAlova = typeof alovaInstance;
type UserMethodConfigMap = typeof $$userConfigMap;

type Alova2MethodConfig<Responded> =
  CollapsedAlova extends Alova<any, any, infer RequestConfig, any, infer ResponseHeader>
    ? AlovaMethodCreateConfig<any, Responded, RequestConfig, ResponseHeader>
    : never;

// Extract the return type of transformData function that define in $$userConfigMap, if it not exists, use the default type.
type ExtractUserDefinedTransformed<
  DefinitionKey extends keyof typeof apiDefinitions,
  Default
> = DefinitionKey extends keyof UserMethodConfigMap
  ? UserMethodConfigMap[DefinitionKey]['transformData'] extends (...args: any[]) => any
    ? Awaited<ReturnType<UserMethodConfigMap[DefinitionKey]['transformData']>>
    : Default
  : Default;
type Alova2Method<
  Responded,
  DefinitionKey extends keyof typeof apiDefinitions,
  CurrentConfig extends Alova2MethodConfig<any> = undefined
> =
  CollapsedAlova extends Alova<infer State, infer Export, infer RequestConfig, infer Response, infer ResponseHeader>
    ? Method<
        State,
        Export,
        CurrentConfig extends undefined
          ? ExtractUserDefinedTransformed<DefinitionKey, Responded>
          : CurrentConfig['transformData'] extends (...args: any[]) => any
            ? Awaited<ReturnType<CurrentConfig['transformData']>>
            : ExtractUserDefinedTransformed<DefinitionKey, Responded>,
        any,
        RequestConfig,
        Response,
        ResponseHeader
      >
    : never;

{{#schemasInfo}}
/**
 * @title {{title}}
 * @description {{description}}
 */

export interface {{name}} {
  {{#propertiesInfo}}
    {{#description}}
  /**
    * {{{description}}}
    * {{#example}}@example {{example}}{{/example}}
    {{#deprecated}}
   * @deprecated
    {{/deprecated}}
  */
    {{/description}}
    {{^description}}
  /**
    * {{#example}}@example {{example}}{{/example}}
    {{#deprecated}}
   * @deprecated
    {{/deprecated}}
  */
    {{/description}}
    {{#enum}}
    {{key}}: "{{{enum}}}";
    {{/enum}}
    {{^enum}}
    {{key}}: {{type}};
    {{/enum}}
  {{/propertiesInfo}}
}
{{/schemasInfo}}